/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2015 NUbots <nubots@nubots.net>
 */

syntax = "proto3";

package message.support.nusight;

import "google/protobuf/timestamp.proto";
import "message/input/GameState.proto";
import "Vector.proto";
import "Matrix.proto";

message Overview {
    /// The timestamp this overview packet was sent
    google.protobuf.Timestamp timestamp = 1;
    uint32                    robot_id  = 2;

    /// The name of the binary this robot is executing
    string role_name = 3;

    /// The current battery voltage as a percentage.
    /// @see message::input::Sensors::battery
    float battery = 4;

    /// The current voltage of the battery.
    /// @see message::input::Sensors::voltage
    float voltage = 5;

    /// Localisation measured in field space
    fvec3 robot_position            = 7;
    fmat3 robot_position_covariance = 8;

    /// The ball position measured in field space
    fvec2 ball_position            = 9;
    fmat2 ball_position_covariance = 10;

    /// The {x, y} location we are kicking to
    fvec2 kick_target = 11;
    /// The type of game being played. From Game Controller
    input.GameState.Data.Mode game_mode = 12;
    /// The current stage of gameplay. For Game Controller
    input.GameState.Data.Phase game_phase = 13;
    /// Why the penalty was given. For Game Controller
    input.GameState.Data.PenaltyReason penalty_reason = 14;
    /// Last time the camera image was seen
    google.protobuf.Timestamp last_camera_image = 15;
    /// Last time vision objects were seen
    google.protobuf.Timestamp last_seen_ball = 16;
    google.protobuf.Timestamp last_seen_goal = 17;
    /// {x, y, omega} - x and y are the target to walk to and omega is the
    /// required rotational velocity about the z axis. In torso space
    fvec3 walk_command = 18;
}
