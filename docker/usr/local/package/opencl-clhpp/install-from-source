#!/bin/sh

# Exit immediately on error
set -e

# Get our method as the name of this script, url and args
URL="$1"

# Set installation prefix, default to /usr/local unless an external power says otherwise
PREFIX=${PREFIX:-"/usr/local"}

BUILD_FOLDER="/var/tmp/build"
RELEASE_CFLAGS="-O3 -DNDEBUG"
RELEASE_CXXFLAGS="${RELEASE_CFLAGS}"
EXTRA_CFLAGS="-fPIC"
EXTRA_CXXFLAGS="${EXTRA_CFLAGS}"

# Pull in the toolchain arguments
. /usr/local/toolchain.sh

# Setup the temporary build directories
mkdir -p "${BUILD_FOLDER}"
cd "${BUILD_FOLDER}"

# Download the source code
wget ${URL}

# Extract the source code archive
ARCHIVE_FILE=$(find . -type f | head -n 1)
case "${ARCHIVE_FILE}" in
  *.tar.gz)  tar xf ${ARCHIVE_FILE} ;;
  *.tar.bz2) tar xf ${ARCHIVE_FILE} ;;
  *.tar.xz)  tar xf ${ARCHIVE_FILE} ;;
  *.tgz)     tar xf ${ARCHIVE_FILE} ;;
  *.tbz)     tar xf ${ARCHIVE_FILE} ;;
  *.tbz2)    tar xf ${ARCHIVE_FILE} ;;
  *.txz)     tar xf ${ARCHIVE_FILE} ;;
  *.zip)     unzip ${ARCHIVE_FILE} ;;
  *.h)       ;;
  *.hpp)     ;;
  *)         echo "Unknown archive format"; exit 1 ;;
esac

shift
ARGS="$@"

echo "Installing header files"

# Find the header file generator script
GEN_FILE=$(find -type f -name 'gen_cl_hpp.py' -printf '%d\t%P\n' | sort -nk1 | cut -f2- | head -n 1)
cd $(dirname ${GEN_FILE})

# Generate header files
python gen_cl_hpp.py -i input_cl.hpp -o cl.hpp

# Now install
install -m 644 cl.hpp ${PREFIX}/include/CL/
install -m 644 input_cl2.hpp ${PREFIX}/include/CL/cl2.hpp

# Now that we have built, cleanup the build directory
rm -rf "${BUILD_FOLDER}"
