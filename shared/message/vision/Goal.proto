/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUbots <nubots@nubots.net>
 */

syntax = "proto3";

package message.vision;

import "google/protobuf/timestamp.proto";
import "Vector.proto";
import "Matrix.proto";

/**
 * Goal position measurements and information.
 */
message Goal {

    /**
     * Side is UNKNOWN_SIDE, LEFT, or RIGHT.
     */
    enum Side {
        UNKNOWN_SIDE = 0;
        LEFT         = 1;
        RIGHT        = 2;
    }

    /**
     * Which team the goals belong to.
     */
    enum Team {
        UNKNOWN_TEAM = 0;
        OWN          = 1;
        OPPONENT     = 2;
    }

    enum MeasurementType {
        UNKNOWN_MEASUREMENT = 0;
        CENTRE              = 1;
        LEFT_NORMAL         = 2;
        RIGHT_NORMAL        = 3;
        TOP_NORMAL          = 4;
        BASE_NORMAL         = 5;
    }

    /**
     * Instance of goal measurement.
     */
    message Measurement {
        MeasurementType type = 1;
        // Normal vectors point inwards towards the centre of the object.
        fvec3 position   = 2;
        fmat3 covariance = 3;
    }
    message Post {
        fvec3 top      = 1;
        fvec3 bottom   = 2;
        float distance = 3;
    }
    Side                 side           = 1;
    Post                 post           = 3;
    repeated Measurement measurements   = 4;
    fvec2                screen_angular = 5;
    fvec2                angular_size   = 6;
    Team                 team           = 7;
}

/**
 * Set of Goals measurements, with timestamp, camera ids, and Hcw transforms.
 */
message Goals {

    /**
     * The camera which took the measurements.
     */
    uint32 camera_id = 1;

    /**
     * When the measurements were taken.
     */
    google.protobuf.Timestamp timestamp = 2;

    /**
     * Affine3d transform from world space to camera space.
     */
    mat4 Hcw = 3;

    /**
     * The set of goal measurements.
     */
    repeated Goal goals = 4;
}
