/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUbots <nubots@nubots.net>
 */

syntax = "proto3";

package message.input;

import "message/platform/webots/messages.proto";
import "google/protobuf/timestamp.proto";
import "Matrix.proto";
import "Vector.proto";

message Image {

    message Lens {
        enum Projection {
            UNKNOWN     = 0;
            RECTILINEAR = 1;
            EQUIDISTANT = 2;
            EQUISOLID   = 3;
        }
        Projection projection = 1;
        /// Normalised focal length: focal length in pixels / image width
        float focal_length = 2;
        /// The angular diameter that the lens covers (the area that light hits on the sensor). In radians
        float fov = 3;
        /// Normalised image centre offset: pixels from centre to optical axis / image width
        fvec2 centre = 4;
        fvec2 k      = 5;
    }
    /// Encoding of colour channels, e.g. BGGR, PRG8, RGBA, etc.
    /// see module::output::compressor::turbojpeg::Compressor::compress for currently supported formats
    uint32 format = 1;
    /// Number of pixels of {x, y} of the image
    uvec2                     dimensions = 2;
    bytes                     data       = 3;
    uint32                    id         = 4;
    string                    name       = 5;
    google.protobuf.Timestamp timestamp  = 6;
    /// World to camera Isometry3d transform
    fmat4 Hcw  = 7;
    Lens lens = 8;
    /// Ground truth data from webots
    platform.webots.VisionGroundTruth vision_ground_truth = 9;
}
