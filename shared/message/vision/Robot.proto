/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2023 NUbots <nubots@nubots.net>
 */

 syntax = "proto3";

 package message.vision;

 import "google/protobuf/timestamp.proto";
 import "Vector.proto";
 import "Matrix.proto";
 import "Transform.proto";

 message Robot {
    /// Vector from the camera to the point on the robot's feet, most in the center of the robot
    vec3 rRCc = 1;
    /// Approximate width of the robot, in meters
    double width = 2;
    /// Spherical Reciprocal Coordinates (1/distance, phi, theta)
    /// Gives a better representation of the error of the measurement, since error comes from the angular position
    vec3 srRCc = 3;
    /// Confidence of this measurement, for localisation
    mat3 covariance = 4;
 }
 message Robots {
     /// ID of the camera that took the image containing the robots
     uint32 id = 1;
     /// When the image was taken that this measurement is derived from
     google.protobuf.Timestamp timestamp = 2;
     /// Isometry3d transform from world space to camera space at the time that the image was taken
     iso3 Hcw = 3;
     /// Could be empty, if there were no robots detected in the image
     repeated Robots robots = 4;
 }
