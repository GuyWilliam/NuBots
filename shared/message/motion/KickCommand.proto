/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUbots <nubots@nubots.net>
 */
syntax = "proto3";

package message.motion;

import "Vector.proto";

/**
 * @author Trent Houliston
 * @author Brendan Annable
 */
enum KickCommandType {
    NORMAL  = 0;
    PENALTY = 1;
}

message KickCommand {
    /// The point to kick
    vec3 target = 1;
    // Force is the magnitude
    vec3            direction         = 2;
    KickCommandType kick_command_type = 3;
}

/**
 * @author Trent Houliston
 * @author Brendan Annable
 */
message KickScriptCommand {
    /// Leg to kick with
    uint32          leg  = 1;
    KickCommandType type = 2;
}

message KickPlannerConfig {
    /// Maximum distance the ball can be from the robot while preparing to kick,
    /// in metres
    float max_ball_distance = 1;
    /// Used to determine how far apart (laterally) the ball center and foot
    /// center are allowed to be while still allowing a kick to happen
    float kick_corridor_width = 2;
    /// How many seconds without vision until the robot decides to not kick
    float seconds_not_seen_limit = 3;
    /// The maximum angle away from the forward axis of the robot that the robot will attempt a kick.
    /// If the kick is too far to the side, it may be discarded
    float kick_forward_angle_limit = 4;
}

message KickFinished {}

message IKKickParams {
    float stand_height = 1;
}
