/*
 * This file is part of the NUbots Codebase.
 *
 * The NUbots Codebase is free software: you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation, either version 3 of the License, or
 * (at your option) any later version.
 *
 * The NUbots Codebase is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with the NUbots Codebase.  If not, see <http://www.gnu.org/licenses/>.
 *
 * Copyright 2013 NUbots <nubots@nubots.net>
 */
syntax = "proto3";

package message.input;

import "google/protobuf/timestamp.proto";

message GameState {

    message Data {
        enum Mode {
            NORMAL            = 0;
            PENALTY_SHOOTOUT  = 1;
            OVERTIME          = 2;
            TIMEOUT_MODE      = 3;
            DIRECT_FREEKICK   = 4;
            INDIRECT_FREEKICK = 5;
            PENALTYKICK       = 6;
            CORNER_KICK       = 7;
            GOAL_KICK         = 8;
            THROW_IN          = 9;
        }
        enum Phase {
            UNKNOWN_PHASE = 0;
            INITIAL       = 1;
            READY         = 2;
            SET           = 3;
            PLAYING       = 4;
            TIMEOUT       = 5;
            FINISHED      = 6;
        }
        enum PenaltyReason {
            UNKNOWN_PENALTY_REASON        = 0;
            UNPENALISED                   = 1;
            BALL_MANIPULATION             = 2;
            PHYSICAL_CONTACT              = 3;
            ILLEGAL_ATTACK                = 4;
            ILLEGAL_DEFENSE               = 5;
            REQUEST_FOR_PICKUP            = 6;
            REQUEST_FOR_SERVICE           = 7;
            REQUEST_FOR_PICKUP_TO_SERVICE = 8;
            SUBSTITUTE                    = 9;
            MANUAL                        = 10;
            PLAYER_PUSHING                = 11;
        }

        /// Used to keep track of penalised robots
        message Robot {
            uint32        id             = 1;
            PenaltyReason penalty_reason = 2;
            /// The timestamp when the robot will be playing again
            google.protobuf.Timestamp unpenalised = 3;
        }

        message Team {
            uint32         team_id       = 1;
            uint32         score         = 2;
            string         coach_message = 3;
            repeated Robot players       = 4;
        }

        message SecondaryState {
            uint32 team_performing = 1;
            uint32 sub_mode        = 2;
        }

        Phase                     phase            = 1;
        Mode                      mode             = 2;
        bool                      first_half       = 3;
        bool                      kicked_out_by_us = 4;
        google.protobuf.Timestamp kicked_out_time  = 5;
        bool                      our_kick_off     = 6;
        /// Timestamp when the robot thinks the half is due to end
        google.protobuf.Timestamp primary_time = 7;
        /// A timestamp used for other times. E.g. how long in ready, or how long until penalty ends
        google.protobuf.Timestamp secondary_time  = 8;
        Team                      team            = 9;
        Team                      opponent        = 10;
        Robot                     self            = 11;
        SecondaryState            secondary_state = 12;
    }
    Data data = 1;
}
